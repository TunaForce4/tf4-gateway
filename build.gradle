plugins {
	id 'java'
	id 'org.springframework.boot' version '3.5.4'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.tunaforce'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

ext {
	set('springCloudVersion', "2025.0.0")
}

dependencies {
    // ===== Core: Spring Boot Starters =====
    implementation 'org.springframework.boot:spring-boot-starter-actuator'     // 헬스/메트릭
    implementation 'org.springframework.boot:spring-boot-starter-webflux'      // WebFlux 기반 (게이트웨이 권장)
    implementation "org.springframework.cloud:spring-cloud-starter-loadbalancer" // @LoadBalanced WebClient

    // ===== API Gateway =====
    implementation 'org.springframework.cloud:spring-cloud-starter-gateway'    // Spring Cloud Gateway (WebFlux)

    // ===== Cloud / Service Discovery =====
    implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client' // 유레카 클라이언트

    // ===== Auth / JWT (게이트웨이에서 토큰검증 시) =====
    implementation 'io.jsonwebtoken:jjwt-api:0.12.3'   // JJWT API
    runtimeOnly  'io.jsonwebtoken:jjwt-impl:0.12.3'    // 구현체
    runtimeOnly  'io.jsonwebtoken:jjwt-jackson:0.12.3' // JSON 직렬화

    // ===== Build-time Tools =====
    compileOnly         'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    // ===== Test =====
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'io.projectreactor:reactor-test'
    testRuntimeOnly   'org.junit.platform:junit-platform-launcher'
}


dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

tasks.named('test') {
	useJUnitPlatform()
}

springBoot {
    mainClass = 'com.tunaforce.gateway.GatewayApplication'
}
